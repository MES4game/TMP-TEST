name: Update README with repository variables

on:
  workflow_dispatch:

jobs:
  update-readme:
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: read
    env:
      GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}
      BRANCH_NAME: update-readme
      BASE_BRANCH: main
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5

      - name: Switch to update branch
        id: branch
        run: |
          BASE_SHA="$(gh api "repos/${{ github.repository }}/git/ref/heads/${BASE_BRANCH}" -q '.object.sha')"
          NEW_BRANCH="${BRANCH_NAME}-$(openssl rand -hex 5)"

          gh api -X POST "repos/${{ github.repository }}/git/refs" \
            -f ref="refs/heads/${NEW_BRANCH}" \
            -f sha="${BASE_SHA}"

          echo "new_branch=${NEW_BRANCH}" >> "${GITHUB_OUTPUT}"

      - name: Update README
        run: |
          GITHUB_REPOSITORY="${{ github.repository }}"
          DOCKERHUB_USERNAME="${{ vars.DOCKERHUB_USERNAME }}"
          DOCKERHUB_IMAGE="${{ vars.DOCKERHUB_IMAGE }}"

          perl -0777 -pe '
            s{
              <!--\s*PATTERN="(.*?)"\s*-->
              (.*?)
              <!--\s*PATTERN_END\s*-->
            }{
              my $pattern = $1;
              my $evaluated = $pattern;
              $evaluated =~ s/\$(\w+)/ exists $ENV{$1} ? $ENV{$1} : "" /eg;
              "<!-- PATTERN=\"$pattern\" -->$evaluated<!-- PATTERN_END -->"
            }egxs;
          ' "README.md" > "tmp.md"

          BRANCH_SHA="$(gh api "/repos/${{ github.repository }}/git/ref/heads/${{ steps.branch.outputs.new_branch }}" -q ".object.sha")"
          FILE_SHA="$(gh api "/repos/${{ github.repository }}/contents/README.md" -q ".sha" -F ref="${BRANCH_SHA}" || echo "")"
          NEW_CONTENT="$(cat "tmp.md" | base64 -w 0)"

          echo "First part done"

          CMD=(gh api -X PUT "/repos/${{ github.repository }}/contents/README.md" \
            -F message="chore(${BRANCH_NAME}): update README with latest variables" \
            -F content="${NEW_CONTENT}" \
            -F branch="${{ steps.branch.outputs.new_branch }}")

          [ -n "${FILE_SHA}" ] && CMD+=(-F "sha=${FILE_SHA}")

          "${CMD[@]}"

      - name: Create or update PR
        id: pr
        run: |
          PR_NUMBER=$(gh pr list --head "${{ steps.branch.outputs.new_branch }}" --base "${BASE_BRANCH}" --json number --jq '.[0].number')

          if [ -z "${PR_NUMBER}" ]; then
            PR_URL="$(gh pr create \
              --base "${BASE_BRANCH}" \
              --head "${{ steps.branch.outputs.new_branch }}" \
              --title "merge(${BRANCH_NAME} -> ${BASE_BRANCH}): update README.md" \
              --body "Auto-generated update via workflow")"
            echo "pr_url=${PR_URL}" >> "${GITHUB_OUTPUT}"

            PR_NUMBER=$(gh pr view "${PR_URL}" --json number --jq '.number')
          fi

          echo "pr_number=${PR_NUMBER}" >> "${GITHUB_OUTPUT}"

      - name: Merge PR and delete branch
        run: |
          gh pr merge ${{ steps.pr.outputs.pr_number }} --merge --admin --delete-branch
