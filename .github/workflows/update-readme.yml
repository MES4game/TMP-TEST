name: Update README with repository variables

on:
  workflow_dispatch:

jobs:
  update-readme:
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: write
    env:
      GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}
      BRANCH_NAME: update-readme
      BASE_BRANCH: dev
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.ADMIN_TOKEN }}

      - name: Load variables
        run: |
          echo "GITHUB_REPOSITORY=${{ github.repository }}" >> "${GITHUB_ENV}"
          echo "DOCKERHUB_USERNAME=${{ vars.DOCKERHUB_USERNAME }}" >> "${GITHUB_ENV}"
          echo "DOCKERHUB_IMAGE=${{ vars.DOCKERHUB_IMAGE }}" >> "${GITHUB_ENV}"

      - name: Configure git
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git config push.default current

      - name: Switch to update branch
        run: |
          git fetch origin
          git checkout "${BRANCH_NAME}"

      - name: Update README
        run: |
          perl -0777 -pe '
            s{
              <!--\s*PATTERN="(.*?)"\s*-->
              (.*?)
              <!--\s*PATTERN_END\s*-->
            }{
              my $pattern = $1;
              my $evaluated = $pattern;
              $evaluated =~ s/\$(\w+)/ exists $ENV{$1} ? $ENV{$1} : "" /eg;
              "<!-- PATTERN=\"$pattern\" -->$evaluated<!-- PATTERN_END -->"
            }egxs;
          ' "README.md" > "tmp.md"

          mv "tmp.md" "README.md"

      - name: Push new README
        run: |
          git add README.md
          git commit -m "chore(update-readme): update README with latest variables"
          git push origin "${BRANCH_NAME}"

      - name: Create or update PR
        id: pr
        run: |
          pr_number=$(gh pr list --head "${BRANCH_NAME}" --base "${BASE_BRANCH}" --json number --jq '.[0].number')

          if [ -z "${pr_number}" ]; then
            pr_url="$(gh pr create \
              --base "${BASE_BRANCH}" \
              --head "${BRANCH_NAME}" \
              --title "Automated Markdown Update" \
              --body "Auto-generated update via workflow.")"
            echo "pr_url=${pr_url}" >> "${GITHUB_OUTPUT}"

            pr_number=$(gh pr view "${pr_url}" --json number --jq '.number')
          fi

          echo "pr_number=${pr_number}" >> "${GITHUB_OUTPUT}"

      - name: Merge PR
        run: |
          gh api \
            --method PUT \
            -H "Accept: application/vnd.github+json" \
            /repos/${{ github.repository }}/pulls/${{ steps.pr.outputs.pr_number }}/merge \
            -f merge_method=merge
